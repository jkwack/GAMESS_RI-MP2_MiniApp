CPP=icpc
CPP_OFF=icpx

SDIR=./
SRC=${SDIR}/GAMESS-RIMP2-CorrEng-Tutorial.cpp

EXE=rimp2-CPP
FFLAGS=-Ofast -g -DV1
FFLAGS+= -xCORE-AVX2
LDFLAGS=

EXE_OMP=rimp2-CPP-OMP
FFLAGS_OMP=-Ofast -qopenmp -DOMP -DV1 -g
FFLAGS_OMP+= -xCORE-AVX2
LDFLAGS_OMP=

EXE_OFFLOAD=rimp2-CPP-OFFLOAD-V1
FFLAGS_OFFLOAD=-Ofast -fiopenmp -fopenmp-targets=spir64 -D__STRICT_ANSI__ -DOFFLOAD -DV1 -g
FFLAGS_OFFLOAD+= -mllvm -vpo-paropt-enable-64bit-opencl-atomics=true
LDFLAGS_OFFLOAD=

EXE_OFFLOAD_V2=rimp2-CPP-OFFLOAD-V2
FFLAGS_OFFLOAD_V2=-Ofast -fiopenmp -fopenmp-targets=spir64 -D__STRICT_ANSI__ -DOFFLOAD -DV2_TILE -g
FFLAGS_OFFLOAD_V2+= -mllvm -vpo-paropt-enable-64bit-opencl-atomics=true
LDFLAGS_OFFLOAD_V2=

EXE_MKL=rimp2-CPP-MKL
FFLAGS_MKL=-Ofast -g -DMKL
FFLAGS_MKL+= -xCORE-AVX2
LDFLAGS_MKL=-mkl=sequential

EXE_MKL_OMP=rimp2-CPP-MKL-OMP
FFLAGS_MKL_OMP=-Ofast -qopenmp -DOMP -DMKL -g
FFLAGS_MKL_OMP+= -xCORE-AVX2
LDFLAGS_MKL_OMP=-mkl=sequential

EXE_MKL_OFFLOAD=rimp2-CPP-MKL-OFFLOAD
FFLAGS_MKL_OFFLOAD= -fiopenmp -fopenmp-targets=spir64 -D__STRICT_ANSI__ -DOFFLOAD -DMKL -g
FFLAGS_MKL_OFFLOAD+= -fsycl-device-code-split=per_kernel
FFLAGS_MKL_OFFLOAD+= -fsycl
#FFLAGS_MKL_OFFLOAD+= -mllvm -vpo-paropt-use-raw-dev-ptr          #not required for Beta10 any more (Louise @MKL team)
FFLAGS_MKL_OFFLOAD+= -mllvm -vpo-paropt-enable-64bit-opencl-atomics=true
LDFLAGS_MKL_OFFLOAD=-lmkl_intel_lp64 -lmkl_sequential -lmkl_core
LDFLAGS_MKL_OFFLOAD+= -lmkl_sycl
LDFLAGS_MKL_OFFLOAD+= -lsycl -lOpenCL -lpthread -ldl -lm -lstdc++

EXES=$(EXE) $(EXE_OMP) $(EXE_OFFLOAD) $(EXE_OFFLOAD_V2)
EXES_MKL=$(EXE_MKL) $(EXE_MKL_OMP) $(EXE_MKL_OFFLOAD)

mkl: $(EXES_MKL)

naive: $(EXE)

all: $(EXES) $(EXES_MKL)

$(EXE): $(SRC)
	$(CPP) $(FFLAGS) $^ -o $@ $(LDFLAGS)
	rm -rf *.o *.mod *.modmic

$(EXE_OMP): $(SRC)
	$(CPP) $(FFLAGS_OMP) $^ -o $@ $(LDFLAGS_OMP)
	rm -rf *.o *.mod *.modmic

$(EXE_OFFLOAD): $(SRC)
	$(CPP_OFF) $(FFLAGS_OFFLOAD) $^ -o $@ $(LDFLAGS_OFFLOAD)
	rm -rf *.o *.mod *.modmic

$(EXE_OFFLOAD_V2): $(SRC)
	$(CPP_OFF) $(FFLAGS_OFFLOAD_V2) $^ -o $@ $(LDFLAGS_OFFLOAD_V2)
	rm -rf *.o *.mod *.modmic

$(EXE_MKL): $(SRC)
	$(CPP) $(FFLAGS_MKL) $^ -o $@ $(LDFLAGS_MKL)
	rm -rf *.o *.mod *.modmic

$(EXE_MKL_OMP): $(SRC)
	$(CPP) $(FFLAGS_MKL_OMP) $^ -o $@ $(LDFLAGS_MKL_OMP)
	rm -rf *.o *.mod *.modmic

$(EXE_MKL_OFFLOAD): $(SRC)
	$(CPP_OFF) $(FFLAGS_MKL_OFFLOAD) $^ -o $@ $(LDFLAGS_MKL_OFFLOAD)
	rm -rf *.o *.mod *.modmic


.SUFFIXES:
.SUFFIXES: .c .o .f90 .cu .cpp .cuf
.PHONY: clean
clean:
	rm -rf *.o *.mod *.modmic $(EXES) $(EXES_MKL)
